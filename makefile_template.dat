
.INCLUDE : ..\include_path_list
.INCLUDE : ..\project_specific_settings
.INCLUDE : ..\LintPath

###### Definitions

# set echo utility to SI's echo program so DOS built-in echo isn't used
# use macro modifier to make sure that ROOTDIR expands to a PC style path

ECHO := ..\tools\echo.exe

# Define source paths for required file types that aren't in current directory

.SOURCE.obj : ..\obj

.IF $(VERBOSE)
#.SILENT
.ELSE
.SILENT=1
.END
###### Explicit rules

ALL : @Objects@


###### Dependency rules (generated by SI)

@Depends


###### Implicit Rules (using meta rule syntax)

%.obj : %.c
	@@ $(ECHO) \nCompiling $(<:f)...
	$(CC) $(CFLAGS) -c $< -o $(<:b).obj > $(<:b).lst
	@@ $(ECHO) Compile successful, $% built.
.IF $(VERBOSE)
	@@ $(ECHO) $% Compile Successful\n
.END

.IF $(ARG0)
.ELSE
	@@ $(ECHO) \nLinting $(<:f)...
	$(LINT) ..\tools\Lint_Dynamic\STD.lnt $(INCLUDE_PATH) $(<:f)
	cmd /C rename LintErrors.txt $(<:b).lnt
	cmd /C type $(<:b).lnt
	@@ $(ECHO) Moving $(<:b) into Linted directory...
	cmd /C move /Y $(<:b).lnt ..\Linted
.END

#.IF $(VERBOSE)
	@@ $(ECHO) Moving $% into object directory...
#.END
	..\tools\mv -f $% ..\obj



%.obj : %.s37
	@@ $(ECHO) \nAssembling $(<:f)...
	$(AS) $(AFLAGS) $<
	@@ $(ECHO) $% ...Assembly Successful


